---
###############################################################################################
# YOU CAN USE all.yml FOR UNIVERSAL PREDEFINED VALUES AND _project_vars.yml FOR CUSTOMIZATION #
###############################################################################################

##########
# Global #
##########

hostname: "{{ inventory_hostname }}"
fqdn: "{{ hostname }}.{{ domain }}"
domain: "{{ zone_domain | default(zone_name) }}.{{ project_fullname }}"
project_fullname: "{{ project_name | lower }}{{ project_id }}"
custom_vm_name: "{{ project_fullname }}_{{ inventory_hostname }}" # This is to override the default vm_name that comes from Providentia
gt_username: gt # The second default account in most machines after "{{ admin_account }}"

# Predefined network lookups
primary_network: "{{ interfaces | selectattr('connection', 'equalto', true) | first }}"
egress_network: "{{ interfaces | selectattr('egress', 'equalto', true) | first }}"
connection_ip: "{{ connection_address | default(primary_network.addresses | selectattr('connection', 'equalto', true) | map(attribute='address') | first | default(omit) | ansible.utils.ipaddr('address')) }}"
primary_ipv4_network: "{{ primary_network.addresses | selectattr('pool_id', 'match', '^default.*') | selectattr('mode', 'match', '^ipv4.*') | map(attribute='address') | first | default(omit) | ansible.utils.ipaddr('network/prefix') }}"
primary_ipv6_network: "{{ primary_network.addresses | selectattr('pool_id', 'match', '^default.*') | selectattr('mode', 'match', '^ipv6.*') | map(attribute='address') | first | default(omit) | ansible.utils.ipaddr('network/prefix') }}"
primary_network_ipv4_gw: "{{ primary_network.addresses | selectattr('pool_id', 'match', '^default.*') | selectattr('mode', 'match', '^ipv4_static.*') | map(attribute='gateway') | first | default(omit) | ansible.utils.ipaddr('address') }}"
primary_network_ipv6_gw: "{{ primary_network.addresses | selectattr('pool_id', 'match', '^default.*') | selectattr('mode', 'match', '^ipv6_static.*') | map(attribute='gateway') | first | default(omit) | ansible.utils.ipaddr('address') }}"
primary_ipv4: "{{ primary_network.addresses | selectattr('pool_id', 'match', '^default.*') | selectattr('mode', 'match', '^ipv4_static.*') | map(attribute='address') | first | default(omit) | ansible.utils.ipaddr('address') }}"
primary_ipv6: "{{ primary_network.addresses | selectattr('pool_id', 'match', '^default.*') | selectattr('mode', 'match', '^ipv6_static.*') | map(attribute='address') | first | default(omit) | ansible.utils.ipaddr('address') }}"
egress_ipv4: "{{ egress_network.addresses | selectattr('pool_id', 'match', '^default.*') | selectattr('mode', 'match', '^ipv4_static.*') | map(attribute='address') | first | default(omit) | ansible.utils.ipaddr('address') }}"
egress_ipv6: "{{ egress_network.addresses | selectattr('pool_id', 'match', '^default.*') | selectattr('mode', 'match', '^ipv6_static.*') | map(attribute='address') | first | default(omit) | ansible.utils.ipaddr('address') }}"
vip_ipv4: "{{ primary_network.addresses | selectattr('mode', 'equalto', 'ipv4_vip') | map(attribute='address') | first | default(omit) | ansible.utils.ipaddr('address') }}"
vip_ipv6: "{{ primary_network.addresses | selectattr('mode', 'equalto', 'ipv6_vip') | map(attribute='address') | first | default(omit) | ansible.utils.ipaddr('address') }}"
primary_ipv4_with_prefix: "{{ primary_network.addresses | selectattr('pool_id', 'match', '^default.*') | selectattr('mode', 'match', '^ipv4_static.*') | map(attribute='address') | first | default(omit) }}"
primary_ipv6_with_prefix: "{{ primary_network.addresses | selectattr('pool_id', 'match', '^default.*') | selectattr('mode', 'match', '^ipv6_static.*') | map(attribute='address') | first | default(omit) }}"
primary_ipv4_dns_enabled: "{{ primary_network.addresses | selectattr('pool_id', 'match', '^default.*') | selectattr('mode', 'match', '^ipv4_static.*') | map(attribute='dns_enabled') | first | default(omit) }}"
primary_ipv6_dns_enabled: "{{ primary_network.addresses | selectattr('pool_id', 'match', '^default.*') | selectattr('mode', 'match', '^ipv6_static.*') | map(attribute='dns_enabled') | first | default(omit) }}"

##################
# VMware vSphere #
##################

vcenter_hostname: ### FILL THIS PART ###
nsx_hostname: ### FILL THIS PART ### This is the NSX Manager fqdn if it is used
datacenter: ### FILL THIS PART ###
cluster: ### FILL THIS PART ###
folder: ### FILL THIS PART ### VM folder path
datastore: ### FILL THIS PART ###
resource_pool: ### FILL THIS PART ###
infra_env: vsphere # This is important for some roles that can also configure deploy machines in other environments like AWS
linked_clone_status: true # Set to false not to use linked clones in vSphere

######################
# VMware Workstation #
######################

templates_path: ### FILL THIS PART ### This is the path where the VMware workstation looks for templates in vSphere to download example "{{ vcenter_hostname }}/{{ datacenter }}/vm/TEMPLATES"

############
# Services #
############

## Vault configuration
vault_address: ### FILL THIS PART ### Your Vault https:// address
vault_credentials: auth_method=ldap mount_point=ldap username={{ deployer_username }} password={{ deployer_password }}
vault_lookup_fragment: "url={{ vault_address }} ca_cert=/etc/ssl/certs/ca-certificates.crt {{ vault_credentials }} " #The space before the ending quote is required
